"""
Django settings for pypas project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

from prettyconf import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_NAME = BASE_DIR.stem


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l=hbedf2%q_nh01yyco#=#i(p2t%(=^s0)u-t9@&f1ch0onyg7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=config.boolean)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default=[], cast=config.list)

# Application definition

INSTALLED_APPS = [
    # DJANGO
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_browser_reload',
    # THIRD PARTY
    'django_rq',
    # CUSTOM
    'exercises.apps.ExercisesConfig',
    'access.apps.AccessConfig',
    'assignments.apps.AssignmentsConfig',
    'frames.apps.FramesConfig',
    'chunks.apps.ChunksConfig',
    'shared.apps.SharedConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_browser_reload.middleware.BrowserReloadMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME', default='pypas'),
        'USER': config('DB_USERNAME', default='db_username'),
        'PASSWORD': config('DB_PASSWORD', default='db_password'),
        'HOST': config('DB_HOST', default='localhost'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = config('TIME_ZONE', default='Atlantic/Canary')

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = config('STATIC_ROOT', default=BASE_DIR / 'static', cast=Path)

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REPOSITORY_PATH = config('REPOSITORY_PATH', default=BASE_DIR / 'repository', cast=Path)

EXERCISE_CONFIG_FILE = config('EXERCISE_CONFIG_FILE', default='.pypas.toml')
EXERCISE_TEMPLATE_FOLDER = config(
    'EXERCISE_TEMPLATE_FOLDER', default=BASE_DIR / 'exercises/.template', cast=Path
)
ASSIGNMENT_UPLOADS_PATH = config('ASSIGNMENT_UPLOADS_PATH', default=BASE_DIR / 'uploads', cast=Path)

PYTEST_UID = config('PYTEST_UID', default='1000')
PYTEST_GID = config('PYTEST_GID', default='1000')
PYTEST_CMD = config(
    'PYTEST_CMD',
    default='docker run --rm -v {assignment_path}:/home/pytest --user {uid}:{gid} pytest -q --show-capture=no --disable-warnings --tb=no',
)

RQ_QUEUES = {
    'default': {
        'HOST': config('REDIS_HOST', default='localhost'),
        'PORT': config('REDIS_PORT', default=6379, cast=int),
        'DB': config('REDIS_DB', default=0, cast=int),
    }
}

BACKUP_DIR = config('BACKUP_DIR', default=BASE_DIR / 'backup', cast=Path)
NUM_BACKUPS_TO_KEEP = config('NUM_BACKUPS_TO_KEEP', default='30', cast=int)

if not DEBUG:
    LOG_DIR = config('LOGS_DIR', default=BASE_DIR / 'logs', cast=Path)
    LOG_DIR.mkdir(parents=True, exist_ok=True)
    LOG_FILENAME = config('LOG_FILENAME', default=f'{PROJECT_NAME}.log')
    LOG_PATH = LOG_DIR / LOG_FILENAME
    LOG_SIZE = config('LOG_SIZE', default=2, cast=int) * 1024 * 1024  # size in MB
    LOG_ROTATE = config('LOG_ROTATE', default=3, cast=int)
    LOG_LEVEL = config('LOG_LEVEL', default='ERROR')
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'file': {
                'formatter': 'verbose',
                'class': 'logging.handlers.RotatingFileHandler',
                'level': LOG_LEVEL,
                'filename': LOG_PATH,
                'maxBytes': LOG_SIZE,
                'backupCount': LOG_ROTATE,
            },
        },
        'formatters': {
            'verbose': {
                'format': '%(levelname)s %(asctime)s %(module)s %(message)s',
                'datefmt': '%d/%m/%Y %H:%M:%S',
            },
        },
        'loggers': {
            'django': {
                'handlers': ['file'],
                'level': LOG_LEVEL,
                'propagate': True,
            },
        },
    }

PYPAS_CLI_PYPI_URL = config('PYPAS_CLI_PYPI_URL', default='https://pypi.org/project/pypas-cli/')
